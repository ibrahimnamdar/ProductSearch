# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  ArtifactNugetName: 'packages-nuget'

# steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

stages:
- stage: build
  displayName: 'Build Nuget Package'
  jobs:
  - job: CI_Build
    displayName: 'Nuget - Build, Pack and Test'    
    steps:
    # - task: gitversion/setup@0
    #   displayName: Install GitVersion
    #   inputs:
    #     versionSpec: '5.5.0'
        
    # - task: gitversion/execute@0
    #   displayName: Determine Version
  
    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        command: 'restore'
        projects: '**/*.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '-c $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Create nuget packages'
      inputs:
        command: 'pack'
        packagesToPack: '**/*.sln'
        packDirectory: '$(Build.ArtifactStagingDirectory)/packages/nuget'
        nobuild: true
        versioningScheme: 'byBuildNumber'

    - publish: '$(Build.ArtifactStagingDirectory)/packages/nuget'
      displayName: 'Publish Artifact: $(ArtifactNugetName)'
      artifact: 'packages-nuget'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- stage: publishinternal
  dependsOn: build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: 'Nuget - Publish Internal Packages'
  jobs:
  - deployment: publishinternal
    displayName: 'Nuget - Publish packages to internal feed'
    environment: nuget-publish-internal
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: '$(ArtifactNugetName)'
            displayName: 'Download nuget packages'

          - task: DotNetCoreCLI@2
            displayName: "Publish nuget packages to internal feed"
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/$(ArtifactNugetName)/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: 'feed-test' # Add your private NuGet feed here